/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ExamCell;

import com.github.lgooddatepicker.components.TimePickerSettings;
import com.github.lgooddatepicker.optionalusertools.PickerUtilities;
import com.github.lgooddatepicker.optionalusertools.TimeVetoPolicy;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import jdk.nashorn.internal.objects.NativeString;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Tanay Thakar
 */
public class DutyAllotment extends javax.swing.JFrame {

    /**
     * Creates new form DutyAllotment
     */
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    java.util.Date date;
    java.sql.Date sqldate;
    int rowCounted;
    
    
    public DutyAllotment() {
        initComponents();
        conn = db.connect();
        fillCombo();
             
    }
    
    private void fillCombo()
    {      
        String sql = "Select * from Exam_TimeTable where not exists (Select * from Duty_Details where Exam_TimeTable.Subject_Code = Duty_Details.Subject_Code)";
        try
        {
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            while(rs.next())
            {
                String name=rs.getString("subject_name");
                jComboBox4.addItem(name);                
            }
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        finally
        {
            try
            {   
                rs.close();
                pst.close();
            }
            catch(SQLException ex)
            {
                JOptionPane.showMessageDialog(null,ex);
            }
        }
    }

    private void updateTable()
    {
        String sql  = "select Duty_Date, Duty_Day, Duty_Slot, Duty_Time from Duty_Details where UID = ?";
        if(jTextField1.getText().isEmpty() || jLabel10.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null,"Table Could not be Updated !\n Please Enter Valid EMP ID");
        }
        else
        {
            if(jTextField1.getText().isEmpty())
            {
                try
                {
                    pst = conn.prepareStatement(sql);
                    pst.setString(1, this.jTextField1.getText());
            
                    rs = pst.executeQuery();
            
                    this.jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                }
                catch(SQLException e)
                {
                    JOptionPane.showMessageDialog(null,e);
                }
                finally
                {
                    try
                    {   
                        rs.close();
                        pst.close();
                    }
                    catch(SQLException ex)
                    {
                        JOptionPane.showMessageDialog(null,ex);
                    }
                }
            }
            else
            {
                try
                {
                    pst = conn.prepareStatement(sql);
                    pst.setString(1, this.jLabel10.getText());
            
                    rs = pst.executeQuery();
                    this.jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                }
                catch(SQLException e)
                {
                    JOptionPane.showMessageDialog(null,e);
                }
                finally
                {
                    try
                    {
                        rs.close();
                        pst.close();
                    }
                    catch(SQLException ex)
                    {
                        JOptionPane.showMessageDialog(null,ex);
                    }
                }
            }
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton2 = new javax.swing.JRadioButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        timePicker1 = new com.github.lgooddatepicker.components.TimePicker(timeSettings);
        timePicker2 = new com.github.lgooddatepicker.components.TimePicker(timeSettings);
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Duty Allotment");
        setResizable(false);

        jRadioButton2.setText("Evening");
        jRadioButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jDateChooser1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jDateChooser1.setDateFormatString("dd MMM, yyyy");
        jDateChooser1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser1PropertyChange(evt);
            }
        });

        jLabel7.setText("Duty Slot :");
        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel8.setText("Duty Date :");
        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jRadioButton1.setText("Morning");
        jRadioButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jLabel9.setText("Search Faculty :");
        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jButton1.setText("Search");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Emp ID :");
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel5.setText("Name :");
        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel6.setText("Branch :");
        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel4.setText("Designation :");
        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Faculty Manager/add icon.png"))); // NOI18N
        jButton2.setText("Add Record");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Faculty Manager/delete icon.gif"))); // NOI18N
        jButton4.setText("Delete");
        jButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Faculty Manager/erase icon.png"))); // NOI18N
        jButton5.setText("Clear");
        jButton5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Date", "Day", "Slot", "Time"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel15.setText("Duty Day :");
        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel14.setText("Duty Time :");
        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        timePicker1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        timePicker2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel16.setText("to");
        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        jLabel17.setText("Faculty Duty Manager");
        jLabel17.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 48)); // NOI18N

        jLabel2.setText("Eg. :      EMPID            or                 Emp Name :   FirstName M LastName");
        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));

        jLabel18.setText("Duty Subject :");
        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select an Option" }));
        jComboBox4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jComboBox4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox4ItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(257, 257, 257))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel17)
                        .addGap(49, 49, 49))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(18, 18, 18)
                                    .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(73, 73, 73))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel14)
                                    .addGap(26, 26, 26)
                                    .addComponent(timePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel16)
                                    .addGap(18, 18, 18)
                                    .addComponent(timePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(56, 56, 56)
                                        .addComponent(jLabel15)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(50, 50, 50)
                                        .addComponent(jLabel18)
                                        .addGap(18, 18, 18)
                                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(280, 280, 280))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(108, 108, 108)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton2)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel18)
                                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(timePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(timePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel14))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(108, 108, 108)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel15)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1366, 729));
        setLocationRelativeTo(null);
	timeSettings.setVetoPolicy(new SampleTimeVetoPolicy());   
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        slot = "E";
        this.jRadioButton2.setSelected(true);
        this.jRadioButton1.setSelected(false);
        //this.jRadioButton3.setSelected(false);
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        slot = "M";
        this.jRadioButton1.setSelected(true);
        this.jRadioButton2.setSelected(false);
        //this.jRadioButton3.setSelected(false);
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        DateFormat df = new SimpleDateFormat("MMM dd,yyyy");
        
        try
        {
            String sql = "Select * from Faculty_Details where UID = '"+this.jTextField1.getText()+"' or Name = '"+this.jTextField1.getText()+"'";
            
            pst = conn.prepareStatement(sql);
            
            //pst.setString(1, this.jTextField1.getText());
            
            rs = pst.executeQuery();
            
            String det1=rs.getString("UID");
            this.jLabel10.setText(det1);
            
            String det2=rs.getString("NAME");
            this.jLabel11.setText(det2);
            
            String add26 = rs.getString("DESIGNATION");
            this.jLabel13.setText(add26);
            
            String add27 = rs.getString("BRANCH");
            this.jLabel12.setText(add27);
            
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, "No Employee Record found...!!!\nPlease Enter a Valid EMP ID or Valid EMP NAME");
        }
        finally
        {
            try {
                rs.close();
                pst.close();
            } 
            catch (SQLException ex) 
            {
                JOptionPane.showMessageDialog(null,ex);
            }
            updateTable();
        }
        
        if(!(jDateChooser1.getDate()==null))
        {
            try
            {
                String sql = "Select Subject_Code, Duty_Day, Duty_Slot, Duty_Time from Duty_Details where UID = ? and Duty_Date = ?";
            
                pst = conn.prepareStatement(sql);
            
                pst.setString(1, this.jTextField1.getText());
                pst.setString(2, df.format(jDateChooser1.getDate()));
            
                rs = pst.executeQuery();
            
                String query = "select Subject_Name from Exam_TimeTable where Subject_Code = ?";
                
                String det2=rs.getString("Duty_Day");
                this.jLabel1.setText(det2);
            
                String add26 = rs.getString("Duty_Slot");
                if(add26.equals("M"))
                {
                    this.jRadioButton1.setSelected(true);
                    this.jRadioButton2.setSelected(false);
                }
                else
                {
                    this.jRadioButton2.setSelected(true);
                    this.jRadioButton1.setSelected(false);
                } 
            
                String add9 = rs.getString("Duty_Time");
                this.timePicker1.setText(add9.substring(0, 6).trim());
                this.timePicker2.setText(add9.substring(11, 17).trim());
                
                pst=conn.prepareStatement(query);
                pst.setString(1, rs.getString("Subject_Code"));
                rs = pst.executeQuery();
                
                this.jComboBox4.setSelectedItem(rs.getString(1));
            }
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(null, "No Duty Details found for this Date...!!!!\nPlease Enter a Valid Date to Retrive Duty Record");
            }
            finally
            {
                try 
                {
                    rs.close();
                    pst.close();
                } 
                catch (SQLException ex) 
                {   
                    JOptionPane.showMessageDialog(null,ex);
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        jDateChooser1.setDate(null);
        jLabel10.setText("");
        jLabel11.setText("");
        jLabel12.setText("");
        jLabel1.setText("");
        jLabel13.setText("");
        //jRadioButton3.setSelected(false);
        jTextField1.setText("");
        timePicker1.setText("");
        timePicker2.setText("");
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        boolean a = jTable1.isEditing();
        System.out.println(a);
        if(a==false){
            JOptionPane.showMessageDialog(null, "Table contents are Non Editable", "Non Editable Contents", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DateFormat df = new SimpleDateFormat("MMM dd,yyyy");
        String Empid = this.jLabel10.getText();
        String DutyDate = df.format(jDateChooser1.getDate());
        try
        {
            String query = "select count(Duty_Slot) from Duty_Details where UID = '"+Empid+"' and Duty_Date = '"+DutyDate+"' and Duty_Slot='"+slot+"'";
            pst=conn.prepareStatement(query);
            rs = pst.executeQuery();
            
            String RowCounts = rs.getString(1);
            int Counted = Integer.parseInt(RowCounts);
            
            if(Counted>0)
            {
                JOptionPane.showMessageDialog(null,"Cannot add Redundant Duties ..!!");
            }
            else
            {
                String sql = "select count(Duty_Slot) from Duty_Details where UID = '"+Empid+"' and Duty_Date = '"+DutyDate+"'";
                pst=conn.prepareStatement(sql);
                rs = pst.executeQuery();
            
                String rowCount = rs.getString(1);
            
                rowCounted = Integer.parseInt(rowCount);
                
                if(rowCounted>1)
                {
                    System.out.println(rowCounted);
                    JOptionPane.showMessageDialog(null,"Cannot add More Duties for this employee for "+DutyDate+" ..!!");
                }
                else
                {
                    int x = JOptionPane.showConfirmDialog(null, "Are you sure you want to add New Duty Record","Add New Duty Record",JOptionPane.YES_NO_OPTION);
            
                    if(jTextField1.getText().isEmpty() || jLabel10.getText().isEmpty() || jLabel11.getText().isEmpty() || jLabel12.getText().isEmpty() || jLabel13.getText().isEmpty() || jLabel1.getText().equals("") || jDateChooser1.getDate()==null || timePicker1.getText().isEmpty() || timePicker2.getText().isEmpty() || jRadioButton1.isSelected() && jRadioButton2.isSelected())
                    {
                        JOptionPane.showMessageDialog(null,"Please Fill up all Fields and Lists ..!!");
                        x=1;
                    }
                    else
                    {              
                        if(x==0)
                        {
                            String sql1 = "INSERT INTO Duty_Details(UID,Name,Duty_Date,Duty_Day,Duty_Slot,Duty_Time,Subject_Code)VALUES(?,?,?,?,?,?,?)";
                            String time = this.timePicker1.getText()+" to "+this.timePicker2.getText();
                        
                            pst = conn.prepareStatement(sql1);
                        
                            pst.setString(1, this.jLabel10.getText());
                            pst.setString(2, this.jLabel11.getText());
                            pst.setString(3, df.format(jDateChooser1.getDate()));
                            pst.setString(4, this.jLabel1.getText());
                            pst.setString(5, this.slot);
                            pst.setString(6, time);
                            pst.setString(7, sub_code);
                            
                            pst.execute();
                        
                            JOptionPane.showMessageDialog(null,"New Duty Record Added Sucessfully");                     
                        } 
                    }
                }
            }
        }
        catch(NumberFormatException | SQLException e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        finally
        {
            try {
                rs.close();
                pst.close();
            } 
            catch (SQLException ex) 
            {
                JOptionPane.showMessageDialog(null,ex);
            }
            updateTable();
            fillCombo();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        DateFormat df = new SimpleDateFormat("MMM dd,yyyy");
        
        if(jTextField1.getText().isEmpty() || jLabel10.getText().isEmpty() || jDateChooser1.getDate()==null || jRadioButton1.isSelected() && jRadioButton2.isSelected())
        {
            JOptionPane.showMessageDialog(null,"No Duty Record Selected..!!!\nPlease Enter a Valid Emp ID to get Appropriate Duty Date & Duty Slot");
        } 
        else
        {
            int x = JOptionPane.showConfirmDialog(null,"Are you sure you want to Delete the Employee's Duty Record ?", "Delete Duty Record",JOptionPane.YES_NO_OPTION);
            
            if(x==0)
            {
                try
                {
                    String sql = "Delete from Duty_Details where UID = ? and Duty_Date = ? and Duty_Slot = ?";
                    
                    pst = conn.prepareStatement(sql);
                    
                    pst.setString(1, this.jLabel10.getText());
                    pst.setString(2, df.format(jDateChooser1.getDate()));
                    pst.setString(3, this.slot);
                    
                    pst.executeUpdate();
                    
                    JOptionPane.showMessageDialog(null, "Record Deleted Successfully..!!!");
                }
                catch(HeadlessException | SQLException e)
                {
                    JOptionPane.showMessageDialog(null, e);
                }
                finally
                {
                    try
                    {
                        rs.close();
                        pst.close();
                    }
                    catch(SQLException ex)
                    {
                        JOptionPane.showMessageDialog(null,ex);
                    }
                    updateTable();
                }
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            jButton1.doClick();
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange
        if("date".equals(evt.getPropertyName()))
        {
            DateFormat df = new SimpleDateFormat("EEEE");
            String ay = df.format(this.jDateChooser1.getDate());
            this.jLabel1.setText(ay);
        }
    }//GEN-LAST:event_jDateChooser1PropertyChange

    private void jComboBox4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox4ItemStateChanged
        
        try
        {
            sub_name = jComboBox4.getSelectedItem().toString();
            String sql = "select * from exam_timetable where subject_name = '"+sub_name+"'";
                    
            pst = conn.prepareStatement(sql);
                    
            rs = pst.executeQuery();
                    
            sub_code = rs.getString("subject_code");
            branch = rs.getString("Branch");
            sem = rs.getString("semester");
            time = rs.getString("Time");
            slot1 = rs.getString("slot");
            date = new SimpleDateFormat("MMM dd,yyyy").parse(rs.getString("date"));
            
            jDateChooser1.setDate(date);
            timePicker1.setText(time.substring(0, 6).trim());
            timePicker2.setText(time.substring(9, 16).trim());
            if(slot1.equals("M"))
                {
                    this.jRadioButton1.setSelected(true);
                    this.jRadioButton2.setSelected(false);
                    slot="M";
                }
                else
                {
                    this.jRadioButton2.setSelected(true);
                    this.jRadioButton1.setSelected(false);
                    slot="E";
                } 
            
            JOptionPane.showMessageDialog(null,"Subject Name : "+sub_name+"\nSubject Code : "+sub_code+"\nBranch : "+branch+"\nSemester : "+sem+"\nDate : "+date+"\nTime : "+time+"");
            
        }
        catch(HeadlessException | SQLException | ParseException e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        finally
        {
            try
            {
                rs.close();
                pst.close();
            }
            catch(SQLException ex)
            {
                JOptionPane.showMessageDialog(null,ex);
            }
        }
    }//GEN-LAST:event_jComboBox4ItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DutyAllotment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DutyAllotment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DutyAllotment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DutyAllotment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DutyAllotment().setVisible(true);
            }
        });
    }
private String slot,sub_name,sub_code,slot1,time,sem,branch;

TimePickerSettings timeSettings = new TimePickerSettings();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox4;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private com.github.lgooddatepicker.components.TimePicker timePicker1;
    private com.github.lgooddatepicker.components.TimePicker timePicker2;
    // End of variables declaration//GEN-END:variables
}
